services:
  postgresql:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_DB: tracker
      POSTGRES_USER: chuckcha
      POSTGRES_PASSWORD: chuckcha
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
#    networks:
#      - microservices-net
    restart: unless-stopped

  redis:
    image: redis:7.2
    container_name: redis-acl
    ports:
      - "6379:6379"
    volumes:
      - ./users.acl:/usr/local/etc/redis/users.acl
    command: [ "redis-server", "--aclfile", "/usr/local/etc/redis/users.acl" ]

#  zipkin:
#    container_name: zipkin
#    image: openzipkin/zipkin
#    ports:
#      - "9411:9411"
#    networks:
#      - microservices-net

#  mongodb:
#    image: mongo
#    container_name: mongo_db
#    ports:
#      - 27017:27017
#    volumes:
#      - mongo:/data
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: alibou
#      MONGO_INITDB_ROOT_PASSWORD: alibou

#  mongo-express:
#    image: mongo-express
#    container_name: mongo_express
#    restart: unless-stopped
#    ports:
#      - 8081:8081
#    environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=alibou
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=alibou
#      - ME_CONFIG_MONGODB_SERVER=mongodb

#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: ms_kafka
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#    networks:
#      - microservices-net
#
#  mail-dev:
#    container_name: ms-mail-dev
#    image: maildev/maildev
#    ports:
#      - 1080:1080
#      - 1025:1025

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  mongo:
